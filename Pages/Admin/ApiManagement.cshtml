@page
@model BusInfo.Pages.Admin.ApiManagementModel
@{
    ViewData["Title"] = "API Key Management";
    Layout = "/Pages/Admin/Shared/_AdminLayout.cshtml";
}

<div class="admin-content">
    <div class="admin-header">
        <h1>API Key Management</h1>
        <div class="header-actions">
            <button id="refreshPendingBtn" class="btn-primary">
                <i class="fas fa-sync"></i>
                Refresh
            </button>
            <button id="exportStatsBtn" class="btn-secondary">
                <i class="fas fa-download"></i>
                Export Stats
            </button>
        </div>
    </div>

    <div class="admin-grid">
        <div class="admin-card">
            <div class="card-header">
                <h3>Active API Keys</h3>
                <i class="fas fa-key card-icon"></i>
            </div>
            <div class="metric">@Model.UsageStats.ActiveKeys</div>
            <div class="metric-detail">@Model.UsageStats.KeysExpiringSoon expiring soon</div>
        </div>

        <div class="admin-card">
            <div class="card-header">
                <h3>Total Requests (24h)</h3>
                <i class="fas fa-chart-line card-icon"></i>
            </div>
            <div class="metric">@Model.UsageStats.Requests24Hours</div>
            <div class="metric-detail">@Model.UsageStats.AverageResponseTime ms avg response</div>
        </div>

        <div class="admin-card">
            <div class="card-header">
                <h3>Error Rate</h3>
                <i class="fas fa-exclamation-triangle card-icon"></i>
            </div>
            <div class="metric">@(((double)Model.UsageStats.ErrorCount / Model.UsageStats.TotalRequests * 100).ToString("F1"))%</div>
            <div class="metric-detail">@Model.UsageStats.ErrorCount errors total</div>
        </div>
    </div>

    <div class="admin-sections">
        <div class="admin-section">
            <div class="section-header">
                <h2>API Usage Overview</h2>
            </div>
            <div class="chart-container" style="height: 300px;">
                <canvas id="apiUsageChart"></canvas>
            </div>
            <div class="chart-controls">
                <select id="timeRange" class="custom-dropdown">
                    <option value="24h">Last 24 Hours</option>
                    <option value="7d">Last 7 Days</option>
                    <option value="30d">Last 30 Days</option>
                </select>
            </div>
        </div>

        <div class="admin-section">
            <div class="section-header">
                <h2>Pending API Key Requests</h2>
            </div>
            @if (!Model.PendingRequests.Any())
            {
                <div class="empty-state">
                    <i class="fas fa-check-circle"></i>
                    <p>No pending API key requests</p>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="admin-table">
                        <thead>
                            <tr>
                                <th>User</th>
                                <th>Requested</th>
                                <th>Reason</th>
                                <th>Intended Use</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="pending-requests">
                            @foreach (var request in Model.PendingRequests)
                            {
                                <tr data-request-id="@request.Id">
                                    <td>@request.User?.Email</td>
                                    <td>@request.RequestedAt.ToLocalTime().ToString("g")</td>
                                    <td>@request.Reason</td>
                                    <td>@(request.IntendedUse ?? "N/A")</td>
                                    <td class="action-buttons">
                                        <button class="btn-small btn-success approve-btn" data-request-id="@request.Id">
                                            Approve
                                        </button>
                                        <button class="btn-small btn-danger reject-btn" data-request-id="@request.Id">
                                            Reject
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>

        <div class="admin-section">
            <div class="section-header">
                <h2>Active API Keys</h2>
                <div class="actions">
                    <div class="search-filter-group">
                        <input type="text" id="apiKeySearch" class="search-input" placeholder="Search by email or key...">
                        <select id="apiKeyFilter" class="custom-dropdown">
                            <option value="all">All Keys</option>
                            <option value="active">Active Only</option>
                            <option value="expiring">Expiring Soon</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="table-responsive">
                <table class="admin-table">
                    <thead>
                        <tr>
                            <th>User</th>
                            <th>API Key</th>
                            <th>Created</th>
                            <th>Last Used</th>
                            <th>Expires</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="apiKeysList">
                        @foreach (var key in Model.ActiveKeys)
                        {
                            var isExpiring = key.ExpiresAt < DateTime.UtcNow.AddDays(30);
                            var daysUntilExpiry = (key.ExpiresAt - DateTime.UtcNow).Days;
                            <tr data-key="@key.Key">
                                <td>@key.UserEmail</td>
                                <td>
                                    <code>@key.Key</code>
                                    <button class="copy-btn" data-key="@key.Key">
                                        <i class="fas fa-copy"></i>
                                    </button>
                                </td>
                                <td>@key.CreatedAt.ToLocalTime().ToString("g")</td>
                                <td>@(key.LastUsed.HasValue ? key.LastUsed.Value.ToLocalTime().ToString("g") : "Never")</td>
                                <td class="@(isExpiring ? "expiring-soon" : "")">
                                    @(daysUntilExpiry > 0 ? $"{daysUntilExpiry} days" : "Expired")
                                </td>
                                <td>
                                    <span class="status-badge @(key.IsActive ? "active" : "inactive")">
                                        @(key.IsActive ? "Active" : "Inactive")
                                    </span>
                                </td>
                                <td>
                                    @if (key.IsActive)
                                    {
                                        <button class="btn-small btn-danger revoke-btn" data-key="@key.Key">
                                            <i class="fas fa-ban"></i>
                                            Revoke
                                        </button>
                                    }
                                    else
                                    {
                                        <button class="btn-small btn-primary restore-btn" data-key="@key.Key">
                                            <i class="fas fa-undo-alt"></i>
                                            Restore
                                        </button>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modals -->
<div id="approveModal" class="custom-modal">
    <div class="custom-modal-content">
        <h2>Approve API Key Request</h2>
        <p>Add optional notes about this approval:</p>
        <textarea id="approveNotes" class="modal-input" rows="3" placeholder="Optional approval notes..."></textarea>
        <div class="modal-actions">
            <button class="btn-secondary cancel-btn">Cancel</button>
            <button class="btn-primary confirm-approve">Approve</button>
        </div>
    </div>
</div>

<div id="rejectModal" class="custom-modal">
    <div class="custom-modal-content">
        <h2>Reject API Key Request</h2>
        <p>Please provide a reason for rejection:</p>
        <textarea id="rejectNotes" class="modal-input" rows="3" placeholder="Rejection reason (required)..."></textarea>
        <div class="modal-actions">
            <button class="btn-secondary cancel-btn">Cancel</button>
            <button class="btn-primary confirm-reject">Reject</button>
        </div>
    </div>
</div>

<div id="revokeModal" class="custom-modal">
    <div class="custom-modal-content">
        <h2>Revoke API Key</h2>
        <p>Are you sure you want to revoke this API key? This action will immediately prevent the key from being used.</p>
        <div class="modal-actions">
            <button class="btn-secondary cancel-btn">Cancel</button>
            <button class="btn-danger confirm-revoke">Revoke</button>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="~/js/admin/apiManagement.js"></script>
}