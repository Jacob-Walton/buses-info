@{
    Layout = "_Layout";
}

<div class="admin-page">
    <div class="admin-sidebar">
        <nav class="admin-nav">
            <a asp-page="/Admin/Index" class="nav-item @(ViewContext.RouteData.Values["page"]?.ToString() == "/Admin/Index" ? "active" : "")">
                <i class="fas fa-chart-line"></i>
                <span>Dashboard</span>
            </a>
            <a asp-page="/Admin/ApiManagement" class="nav-item @(ViewContext.RouteData.Values["page"]?.ToString() == "/Admin/ApiManagement" ? "active" : "")">
                <i class="fas fa-code"></i>
                <span>API Management</span>
            </a>
            <a asp-page="/Admin/Users" class="nav-item @(ViewContext.RouteData.Values["page"]?.ToString() == "/Admin/Users" ? "active" : "")">
                <i class="fas fa-users"></i>
                <span>Users</span>
            </a>
            <a asp-page="/Admin/Settings" class="nav-item @(ViewContext.RouteData.Values["page"]?.ToString() == "/Admin/Settings" ? "active" : "")">
                <i class="fas fa-cog"></i>
                <span>Settings</span>
            </a>
            <a asp-page="/Admin/Maintenance" class="nav-item @(ViewContext.RouteData.Values["page"]?.ToString() == "/Admin/Maintenance" ? "active" : "")">
                <i class="fas fa-tools"></i>
                <span>Maintenance</span>
            </a>
        </nav>
    </div>

    <div class="admin-content">
        @RenderBody()
    </div>
</div>

@section Scripts {
    @await RenderSectionAsync("Scripts", required: false)
}